suite: test certificate template
templates:
  - certificate.yaml
tests:
  - it: should not render certificate when disabled
    set:
      certificate.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should render certificate when enabled with default values
    set:
      certificate.enabled: true
      certificate.issuerRef.name: "letsencrypt-prod"
      certificate.issuerRef.kind: "ClusterIssuer"
      certificate.commonName: "iap.example.com"
      certificate.domain: "example.com"
      certificate.renewBefore: "720h"
      certificate.duration: "2160h"
      replicaCount: 1
      fullnameOverride: "my-iap"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Certificate
      - isAPIVersion:
          of: cert-manager.io/v1
      - equal:
          path: metadata.name
          value: "my-iap-tls"
      - equal:
          path: spec.secretName
          value: "my-iap-tls-secret"
      - equal:
          path: spec.issuerRef.name
          value: "letsencrypt-prod"
      - equal:
          path: spec.issuerRef.kind
          value: "ClusterIssuer"
      - equal:
          path: spec.commonName
          value: "iap.example.com"
      - equal:
          path: spec.renewBefore
          value: "720h"
      - equal:
          path: spec.duration
          value: "2160h"
      - contains:
          path: spec.dnsNames
          content: "iap.example.com"
      - contains:
          path: spec.dnsNames
          content: "my-iap-0.example.com"
      - lengthEqual:
          path: spec.dnsNames
          count: 2

  - it: should render certificate with multiple replicas
    set:
      certificate.enabled: true
      certificate.issuerRef.name: "letsencrypt-staging"
      certificate.issuerRef.kind: "Issuer"
      certificate.commonName: "iap.staging.com"
      certificate.domain: "staging.com"
      certificate.renewBefore: "168h"
      certificate.duration: "720h"
      replicaCount: 3
    release:
      name: iap
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Certificate
      - equal:
          path: spec.issuerRef.name
          value: "letsencrypt-staging"
      - equal:
          path: spec.issuerRef.kind
          value: "Issuer"
      - equal:
          path: spec.commonName
          value: "iap.staging.com"
      - contains:
          path: spec.dnsNames
          content: "iap.example.com"
      - contains:
          path: spec.dnsNames
          content: "iap-0.staging.com"
      - contains:
          path: spec.dnsNames
          content: "iap-1.staging.com"
      - contains:
          path: spec.dnsNames
          content: "iap-2.staging.com"
      - lengthEqual:
          path: spec.dnsNames
          count: 4

  - it: should handle zero replicas
    set:
      certificate.enabled: true
      certificate.issuerRef.name: "self-signed"
      certificate.issuerRef.kind: "ClusterIssuer"
      certificate.commonName: "iap.local"
      certificate.domain: "local"
      certificate.renewBefore: "24h"
      certificate.duration: "168h"
      replicaCount: 0
      fullnameOverride: "zero-replica-iap"
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.commonName
          value: "iap.local"
      - contains:
          path: spec.dnsNames
          content: "iap.example.com"
      - lengthEqual:
          path: spec.dnsNames
          count: 1

  - it: should include proper labels
    set:
      certificate.enabled: true
      certificate.issuerRef.name: "test-issuer"
      certificate.issuerRef.kind: "ClusterIssuer"
      certificate.commonName: "test.com"
      certificate.domain: "test.com"
      certificate.renewBefore: "720h"
      certificate.duration: "2160h"
      replicaCount: 1
    release:
      name: iap
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.labels["app.kubernetes.io/component"]
          value: "certificate"
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: "iap"
      - equal:
          path: metadata.labels["app.kubernetes.io/layer"]
          value: "application"
      - equal:
          path: metadata.labels["app.kubernetes.io/managed-by"]
          value: "Helm"
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: "iap"
      - equal:
          path: metadata.labels["app.kubernetes.io/part-of"]
          value: "itential-platform"
      - exists:
          path: metadata.labels["app.kubernetes.io/version"]
      - exists:
          path: metadata.labels["helm.sh/chart"]

  - it: should handle string replica count
    set:
      certificate.enabled: true
      certificate.issuerRef.name: "test-issuer"
      certificate.issuerRef.kind: "ClusterIssuer"
      certificate.commonName: "test.com"
      certificate.domain: "test.com"
      certificate.renewBefore: "720h"
      certificate.duration: "2160h"
      replicaCount: "2"
      fullnameOverride: "string-replica-iap"
    asserts:
      - hasDocuments:
          count: 1
      - contains:
          path: spec.dnsNames
          content: "iap.example.com"
      - contains:
          path: spec.dnsNames
          content: "string-replica-iap-0.test.com"
      - contains:
          path: spec.dnsNames
          content: "string-replica-iap-1.test.com"
      - lengthEqual:
          path: spec.dnsNames
          count: 3

  - it: should handle different issuer kinds
    set:
      certificate.enabled: true
      certificate.issuerRef.name: "ca-issuer"
      certificate.issuerRef.kind: "Issuer"
      certificate.commonName: "ca.example.com"
      certificate.domain: "example.com"
      certificate.renewBefore: "360h"
      certificate.duration: "1080h"
      replicaCount: 1
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.issuerRef.kind
          value: "Issuer"
      - equal:
          path: spec.issuerRef.name
          value: "ca-issuer"

  - it: should properly quote commonName
    set:
      certificate.enabled: true
      certificate.issuerRef.name: "test-issuer"
      certificate.issuerRef.kind: "ClusterIssuer"
      certificate.commonName: "special-chars.example.com"
      certificate.domain: "example.com"
      certificate.renewBefore: "720h"
      certificate.duration: "2160h"
      replicaCount: 1
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.commonName
          value: "special-chars.example.com"
      - contains:
          path: spec.dnsNames
          content: "iap.example.com"
      - contains:
          path: spec.dnsNames
          content: "RELEASE-NAME-iap-0.example.com"